{"ast":null,"code":"var _s = $RefreshSig$();\nimport useUser from \"./useUser\";\nimport api from '../Axios/axios';\nconst useLogin = (email, password) => {\n  _s();\n  const {\n    user,\n    setUser\n  } = useUser();\n  async function call() {\n    try {\n      const data = await api.post('/auth/login', {\n        email,\n        password\n      });\n      if (data) {\n        setUser(data);\n      }\n      return data;\n    } catch (error) {\n      console.error(error.data);\n      return null;\n    }\n  }\n  return call;\n};\n_s(useLogin, \"jBZvQrPcHfLbd+T/RZ6qYCjwbkw=\", false, function () {\n  return [useUser];\n});\nexport default useLogin;","map":{"version":3,"names":["useUser","api","useLogin","email","password","_s","user","setUser","call","data","post","error","console"],"sources":["S:/Storage/Desktop/Test/proj/client/src/Hooks/useLogin.jsx"],"sourcesContent":["import useUser from \"./useUser\";\r\nimport api from '../Axios/axios'\r\n\r\nconst useLogin = (email,password) => {\r\n\r\n    const {user,setUser} = useUser()\r\n\r\n    async function call(){\r\n        try {\r\n            \r\n            const data = await api.post('/auth/login',{\r\n                email,\r\n                password\r\n            });\r\n            if(data){\r\n                setUser(data);\r\n            }\r\n            \r\n            return data;\r\n        } catch (error) {\r\n            console.error(error.data);\r\n            return null\r\n        }\r\n    }\r\n\r\n  return call;\r\n}\r\n\r\nexport default useLogin\r\n"],"mappings":";AAAA,OAAOA,OAAO,MAAM,WAAW;AAC/B,OAAOC,GAAG,MAAM,gBAAgB;AAEhC,MAAMC,QAAQ,GAAGA,CAACC,KAAK,EAACC,QAAQ,KAAK;EAAAC,EAAA;EAEjC,MAAM;IAACC,IAAI;IAACC;EAAO,CAAC,GAAGP,OAAO,CAAC,CAAC;EAEhC,eAAeQ,IAAIA,CAAA,EAAE;IACjB,IAAI;MAEA,MAAMC,IAAI,GAAG,MAAMR,GAAG,CAACS,IAAI,CAAC,aAAa,EAAC;QACtCP,KAAK;QACLC;MACJ,CAAC,CAAC;MACF,IAAGK,IAAI,EAAC;QACJF,OAAO,CAACE,IAAI,CAAC;MACjB;MAEA,OAAOA,IAAI;IACf,CAAC,CAAC,OAAOE,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAACA,KAAK,CAACF,IAAI,CAAC;MACzB,OAAO,IAAI;IACf;EACJ;EAEF,OAAOD,IAAI;AACb,CAAC;AAAAH,EAAA,CAvBKH,QAAQ;EAAA,QAEaF,OAAO;AAAA;AAuBlC,eAAeE,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}